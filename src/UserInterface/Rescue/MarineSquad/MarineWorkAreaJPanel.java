/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Rescue.MarineSquad;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.ChiefOrganization;
import Business.Organization.MarineSquadOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.InfoWorkRequest;
import Business.WorkQueue.WorkRequest;
import UserInterface.Rescue.Chief.ChiefWorkAreaJPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vishnu
 */
public class MarineWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private MarineSquadOrganization marineOrganization;
    private Enterprise enterprise;
    /**
     * Creates new form MarineWorkAreaJPanel
     */
    public MarineWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization,Enterprise enterprise, EcoSystem business) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.enterprise = enterprise;
        this.business = business;
        this.marineOrganization = (MarineSquadOrganization) organization;

        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : marineOrganization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[3];
            row[0] = request;
            row[1] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[2] = request.getStatus();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        safetyAreabuttonGroup = new javax.swing.ButtonGroup();
        backupbuttonGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        btnInfo = new javax.swing.JButton();
        rbtnBackupYes = new javax.swing.JRadioButton();
        assignJButton = new javax.swing.JButton();
        rbtnBackupNo = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPeopleSaved = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtActivityDesc = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        txtPeopleDead = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        rbtnAreaYes = new javax.swing.JRadioButton();
        rbtnAreaNo = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setLayout(null);

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Sender", "Receiver", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(400, 250, 552, 76);

        btnInfo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnInfo.setText("Send Information");
        btnInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInfoActionPerformed(evt);
            }
        });
        add(btnInfo);
        btnInfo.setBounds(1150, 870, 220, 42);

        backupbuttonGroup.add(rbtnBackupYes);
        rbtnBackupYes.setText("Yes");
        add(rbtnBackupYes);
        rbtnBackupYes.setBounds(1150, 720, 49, 25);

        assignJButton.setText("Process");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton);
        assignJButton.setBounds(400, 340, 552, 42);

        backupbuttonGroup.add(rbtnBackupNo);
        rbtnBackupNo.setText("No");
        add(rbtnBackupNo);
        rbtnBackupNo.setBounds(1200, 720, 43, 25);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Marine Squad");
        add(jLabel1);
        jLabel1.setBounds(400, 210, 250, 44);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Activity description:");
        add(jLabel6);
        jLabel6.setBounds(970, 760, 178, 60);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("People saved:");
        add(jLabel2);
        jLabel2.setBounds(1020, 560, 125, 22);
        add(txtPeopleSaved);
        txtPeopleSaved.setBounds(1150, 560, 184, 22);

        txtActivityDesc.setColumns(20);
        txtActivityDesc.setRows(5);
        jScrollPane2.setViewportView(txtActivityDesc);

        add(jScrollPane2);
        jScrollPane2.setBounds(1150, 770, 250, 70);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Lives Lost");
        add(jLabel3);
        jLabel3.setBounds(1030, 610, 87, 22);
        add(txtPeopleDead);
        txtPeopleDead.setBounds(1150, 610, 184, 22);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Area Safe?");
        add(jLabel4);
        jLabel4.setBounds(1040, 680, 97, 22);

        safetyAreabuttonGroup.add(rbtnAreaYes);
        rbtnAreaYes.setText("Yes");
        add(rbtnAreaYes);
        rbtnAreaYes.setBounds(1150, 680, 49, 25);

        safetyAreabuttonGroup.add(rbtnAreaNo);
        rbtnAreaNo.setText("No");
        add(rbtnAreaNo);
        rbtnAreaNo.setBounds(1200, 680, 43, 25);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Need backup?");
        add(jLabel5);
        jLabel5.setBounds(1020, 720, 128, 22);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Incident Details:");
        add(jLabel7);
        jLabel7.setBounds(1030, 480, 302, 44);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Rescue/MarineSquad/rescueImage.JPG"))); // NOI18N
        jLabel8.setText("jLabel8");
        add(jLabel8);
        jLabel8.setBounds(0, 0, 1950, 1000);
    }// </editor-fold>//GEN-END:initComponents

    private void btnInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInfoActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow >= 0) {
            InfoWorkRequest iwr = (InfoWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
        
            iwr.setReceiver(userAccount);
            iwr.setStatus("Completed");
            iwr.setSavedPeople(Integer.parseInt(txtPeopleSaved.getText()));
            iwr.setDeadPeople(Integer.parseInt(txtPeopleDead.getText()));
            iwr.setDescActivity(txtActivityDesc.getText());
            if (rbtnAreaYes.isSelected()){
            iwr.setAreaSafe("Area is safe");
            }else{
                iwr.setAreaSafe("Area unsafe!!");
            }

            if (rbtnBackupYes.isSelected()){
                iwr.setBackup("Need backup");
            }else{
                iwr.setBackup("No backup needed");
            }
            
             Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof ChiefOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(iwr);
            userAccount.getWorkQueue().getWorkRequestList().add(iwr);
            
        }

            
            JOptionPane.showMessageDialog(this,"Information sent to Chief successfully");
        
        }
    }//GEN-LAST:event_btnInfoActionPerformed

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow >= 0) {
            WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
            if (request.getStatus().equalsIgnoreCase("Completed")) {
                JOptionPane.showMessageDialog(null, "Request already processed.");
                
            }else {
                request.setReceiver(userAccount);
                request.setStatus("Processing");
                populateTable();
            }

        } else {
            JOptionPane.showMessageDialog(null, "Choose a request to process.");
            
        }

    }//GEN-LAST:event_assignJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.ButtonGroup backupbuttonGroup;
    private javax.swing.JButton btnInfo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rbtnAreaNo;
    private javax.swing.JRadioButton rbtnAreaYes;
    private javax.swing.JRadioButton rbtnBackupNo;
    private javax.swing.JRadioButton rbtnBackupYes;
    private javax.swing.ButtonGroup safetyAreabuttonGroup;
    private javax.swing.JTextArea txtActivityDesc;
    private javax.swing.JTextField txtPeopleDead;
    private javax.swing.JTextField txtPeopleSaved;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
