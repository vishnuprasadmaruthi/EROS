/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Rescue.Chief;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.ChiefOrganization;
import Business.Organization.GroundSquadOrganization;
import Business.Organization.MarineSquadOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.InfoWorkRequest;
import Business.WorkQueue.OperatorWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Vishnu
 */
public class ChiefWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private ChiefOrganization organization;
    private EcoSystem business;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private InfoWorkRequest iwr;
    /**
     * Creates new form ChiefWorkAreaJPanel
     */
    public ChiefWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, ChiefOrganization organization, Enterprise enterprise,EcoSystem business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        populateRequestTable();
 
        for(WorkRequest wr : business.getWorkQueue().getWorkRequestList()){
          
        if( wr instanceof OperatorWorkRequest){
         
            labelUpdate.setText(((OperatorWorkRequest) wr).getAlert());
        }
        }
      
    }
    

    
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[3];
            row[0] = request;
            row[1] = request.getReceiver();
            row[2] = request.getStatus();
      
            model.addRow(row);
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        rbtnMarine = new javax.swing.JRadioButton();
        rbtnGround = new javax.swing.JRadioButton();
        btnDisp1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtSquadStatus = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAreaSafetyStatus = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        labelUpdate = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtActivityDesc = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        txtBackup = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        checkstatusjButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtPplsaved = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtPpldead = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();

        setLayout(null);

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Sender", "Receiver", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(1000, 540, 350, 90);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ChiefWorkArea");
        add(jLabel1);
        jLabel1.setBounds(470, 90, 138, 22);

        rbtnMarine.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rbtnMarine.setText("Marine Squad & Ambulance");
        rbtnMarine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnMarineActionPerformed(evt);
            }
        });
        add(rbtnMarine);
        rbtnMarine.setBounds(470, 220, 277, 31);

        rbtnGround.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rbtnGround.setText("Ground squad & Ambulance");
        add(rbtnGround);
        rbtnGround.setBounds(770, 220, 279, 31);

        btnDisp1.setText("Dispatch");
        btnDisp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisp1ActionPerformed(evt);
            }
        });
        add(btnDisp1);
        btnDisp1.setBounds(470, 270, 390, 40);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Squad status:");
        add(jLabel2);
        jLabel2.setBounds(470, 470, 123, 22);

        txtSquadStatus.setEditable(false);
        add(txtSquadStatus);
        txtSquadStatus.setBounds(620, 470, 150, 22);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Area Safety status:");
        add(jLabel3);
        jLabel3.setBounds(1030, 780, 171, 20);

        txtAreaSafetyStatus.setEditable(false);
        add(txtAreaSafetyStatus);
        txtAreaSafetyStatus.setBounds(1230, 780, 150, 22);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Activity Description:");
        add(jLabel4);
        jLabel4.setBounds(1020, 850, 181, 22);

        labelUpdate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelUpdate.setForeground(new java.awt.Color(255, 255, 255));
        labelUpdate.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelUpdate.setText("liveUpdates");
        add(labelUpdate);
        labelUpdate.setBounds(620, 90, 600, 22);

        txtActivityDesc.setEditable(false);
        txtActivityDesc.setColumns(20);
        txtActivityDesc.setRows(5);
        jScrollPane2.setViewportView(txtActivityDesc);

        add(jScrollPane2);
        jScrollPane2.setBounds(1230, 840, 250, 50);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Need Backup?");
        add(jLabel5);
        jLabel5.setBounds(1070, 810, 129, 20);

        txtBackup.setEditable(false);
        add(txtBackup);
        txtBackup.setBounds(1230, 810, 150, 22);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Check Report");
        add(jLabel6);
        jLabel6.setBounds(1000, 510, 122, 22);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Squads");
        add(jLabel7);
        jLabel7.setBounds(450, 180, 65, 22);

        checkstatusjButton.setText("Check Status");
        checkstatusjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkstatusjButtonActionPerformed(evt);
            }
        });
        add(checkstatusjButton);
        checkstatusjButton.setBounds(1000, 640, 350, 40);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("People saved:");
        add(jLabel8);
        jLabel8.setBounds(1070, 720, 140, 20);

        txtPplsaved.setEditable(false);
        add(txtPplsaved);
        txtPplsaved.setBounds(1230, 720, 90, 22);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("People dead:");
        add(jLabel9);
        jLabel9.setBounds(1080, 750, 130, 20);

        txtPpldead.setEditable(false);
        add(txtPpldead);
        txtPpldead.setBounds(1230, 750, 90, 22);

        jLabel11.setIcon(new javax.swing.ImageIcon("C:\\Users\\incha\\Documents\\NetBeansProjects\\Project_EmergencyRescueOperationSystem\\chiefImage.JPG")); // NOI18N
        jLabel11.setText("jLabel11");
        add(jLabel11);
        jLabel11.setBounds(0, 0, 1930, 1000);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDisp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisp1ActionPerformed
        // TODO add your handling code here:
            if(!rbtnGround.isSelected() && !rbtnMarine.isSelected() ){
                   JOptionPane.showMessageDialog(this, "Please select squads to dispatch!!");  
        }else{
    
        JOptionPane.showMessageDialog(this, "Emergency Squads dispatched successfully!");
        txtSquadStatus.setText("Dispatched");
        InfoWorkRequest iwr = new InfoWorkRequest();
        iwr.setSender(userAccount);
        iwr.setStatus("Sent");
        
        Organization org = null;
        for (Organization org1 : enterprise.getOrganizationDirectory().getOrganizationList()){

               if(rbtnGround.isSelected()){
                  if( org1 instanceof GroundSquadOrganization){
                      org = org1;
                      break;
                  }
               }else if(rbtnMarine.isSelected()){
                   if(org1 instanceof MarineSquadOrganization){
                       org = org1;
                       break;
                   }
               }
        
        
        }
        
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(iwr);
            userAccount.getWorkQueue().getWorkRequestList().add(iwr);
        }
        
        populateRequestTable();
        
        
        }
        
//        for(WorkRequest wr : organization.getWorkQueue().getWorkRequestList()){
//            wr.getSender().getEmployee().getName();
//            wr.getReceiver().getEmployee().getName();
//            
//        }
            
    
    }//GEN-LAST:event_btnDisp1ActionPerformed

    private void checkstatusjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkstatusjButtonActionPerformed
        // TODO add your handling code here:
            int selectedRow = workRequestJTable.getSelectedRow();

            if (selectedRow >= 0) {
            InfoWorkRequest  iwr= (InfoWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
                System.out.println("iwr: "+iwr);
                System.out.println("iwr.getareasafe: "+iwr.getAreaSafe());
                txtAreaSafetyStatus.setText(iwr.getAreaSafe());
                txtBackup.setText(iwr.getBackup());
                txtActivityDesc.setText(iwr.getDescActivity());
                txtPplsaved.setText(String.valueOf(iwr.getSavedPeople()));
                txtPpldead.setText(String.valueOf(iwr.getDeadPeople()));
        
                if(txtAreaSafetyStatus.getText().equalsIgnoreCase("Area is safe")){
                    labelUpdate.setText("No live updates available for now");
                }
        
//            DefaultCategoryDataset dataset = new DefaultCategoryDataset();
//                System.out.println("alive"+ iwr.getSavedPeople());
//                dataset.setValue(iwr.getSavedPeople(),"Lives", "Event");
//                dataset.setValue(iwr.getDeadPeople(),"Lives", "Event");
//                
//               JFreeChart chart = ChartFactory.createBarChart("Statistics", "Event", "Lives", dataset, PlotOrientation.VERTICAL, false, true, false);
//                CategoryPlot p = chart.getCategoryPlot();
//                p.setRangeGridlinePaint(Color.BLACK);
//                ChartFrame frame = new ChartFrame("Bar Chart to display number of Lives lost and People Saved", chart);
//                frame.setVisible(true);
//                frame.setSize(450,350);

                DefaultPieDataset pieDataset = new DefaultPieDataset();
                pieDataset.setValue("Saved", iwr.getSavedPeople());
                pieDataset.setValue("Lost", iwr.getDeadPeople());
                
               JFreeChart chart = ChartFactory.createPieChart("Statistics",pieDataset,true,true,true);
                PiePlot P = (PiePlot)chart.getPlot();
//                P.setForegroundAlpha(TOP_ALIGNMENT);
                ChartFrame frame = new ChartFrame("Statistics", chart);
                frame.setVisible(true);
                frame.setSize(450,500);
            }
            
            
            
    }//GEN-LAST:event_checkstatusjButtonActionPerformed

    private void rbtnMarineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnMarineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnMarineActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDisp1;
    private javax.swing.JButton checkstatusjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelUpdate;
    private javax.swing.JRadioButton rbtnGround;
    private javax.swing.JRadioButton rbtnMarine;
    private javax.swing.JTextArea txtActivityDesc;
    private javax.swing.JTextField txtAreaSafetyStatus;
    private javax.swing.JTextField txtBackup;
    private javax.swing.JTextField txtPpldead;
    private javax.swing.JTextField txtPplsaved;
    private javax.swing.JTextField txtSquadStatus;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
